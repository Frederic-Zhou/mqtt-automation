# Mobile Automation Scripts Collection
# 手机自动化脚本集合

---
# 脚本1: 登录演示
name: login_demo
description: 演示登录流程脚本
version: "1.0"

# 全局变量定义
variables:
  username: ""        # 用户名（必填）
  password: ""        # 密码（必填）
  timeout: 10         # 默认超时时间

steps:
  - name: take_screenshot
    type: screenshot
    description: 获取当前屏幕截图
    timeout: 10

  - name: check_username_field
    type: check_text
    text: "用户名"
    description: 检查是否存在用户名输入框
    timeout: 5
    on_failure: end

  - name: input_username
    type: tap_text
    text: "用户名"
    description: 点击用户名输入框
    timeout: 5

  - name: type_username
    type: input
    text: "{{username}}"
    description: 输入用户名
    wait: 1

  - name: input_password
    type: tap_text
    text: "密码"
    description: 点击密码输入框
    timeout: 5

  - name: type_password
    type: input
    text: "{{password}}"
    description: 输入密码
    wait: 1

  - name: click_login
    type: tap_text
    text: "登录"
    description: 点击登录按钮
    timeout: 5

  - name: wait_result
    type: wait
    wait: 3
    description: 等待登录结果

  - name: check_result
    type: screenshot
    description: 获取登录后截图
    timeout: 10

---
# 脚本2: 应用启动
name: app_launch
description: 启动指定应用并进行基本操作
version: "1.0"

variables:
  app_name: "设置"      # 应用名称
  wait_time: 3         # 等待时间

steps:
  - name: take_initial_screenshot
    type: screenshot
    description: 获取桌面截图
    timeout: 10

  - name: find_app
    type: check_text
    text: "{{app_name}}"
    description: 查找应用图标
    timeout: 10
    on_failure: search_app

  - name: launch_app
    type: tap_text
    text: "{{app_name}}"
    description: 点击启动应用
    timeout: 5

  - name: wait_app_load
    type: wait
    wait: 3
    description: 等待应用加载

  - name: verify_app_launched
    type: screenshot
    description: 验证应用是否成功启动
    timeout: 10

  - name: search_app
    type: shell
    command: "adb shell input keyevent KEYCODE_HOME"
    description: 返回桌面搜索应用
    timeout: 5

---
# 脚本3: 文本搜索演示
name: text_search_demo
description: 演示屏幕文本搜索和交互
version: "1.0"

variables:
  search_text: "设置"   # 要搜索的文本
  action: "tap"        # 操作类型: tap, check

steps:
  - name: take_screenshot
    type: screenshot
    description: 获取当前屏幕
    timeout: 10

  - name: search_text
    type: check_text
    text: "{{search_text}}"
    description: 搜索指定文本
    timeout: 5
    on_failure: text_not_found

  - name: interact_with_text
    type: tap_text
    text: "{{search_text}}"
    description: 与找到的文本进行交互
    timeout: 5

  - name: wait_after_action
    type: wait
    wait: 2
    description: 操作后等待

  - name: final_screenshot
    type: screenshot
    description: 获取操作后截图
    timeout: 10

  - name: text_not_found
    type: shell
    command: "echo '未找到指定文本: {{search_text}}'"
    description: 文本未找到的处理
    timeout: 3

---
# 脚本4: 系统信息收集
name: system_info
description: 收集设备系统信息
version: "1.0"

variables:
  output_format: "详细"

steps:
  - name: get_device_info
    type: shell
    command: "adb shell getprop ro.product.model && adb shell getprop ro.build.version.release"
    description: 获取设备型号和Android版本
    timeout: 10

  - name: get_screen_info
    type: shell
    command: "adb shell wm size && adb shell wm density"
    description: 获取屏幕分辨率和密度
    timeout: 5

  - name: get_memory_info
    type: shell
    command: "adb shell cat /proc/meminfo | grep MemTotal"
    description: 获取内存信息
    timeout: 5

  - name: get_battery_info
    type: shell
    command: "adb shell dumpsys battery | grep level"
    description: 获取电池电量
    timeout: 5

  - name: take_info_screenshot
    type: screenshot
    description: 获取系统信息截图
    timeout: 10

---
# 脚本5: 网络测试
name: network_test
description: 测试设备网络连接
version: "1.0"

variables:
  test_host: "www.baidu.com"
  ping_count: 3

steps:
  - name: check_wifi_status
    type: shell
    command: "adb shell dumpsys wifi | grep 'Wi-Fi is'"
    description: 检查WiFi状态
    timeout: 5

  - name: ping_test
    type: shell
    command: "adb shell ping -c {{ping_count}} {{test_host}}"
    description: 执行网络ping测试
    timeout: 15

  - name: get_ip_info
    type: shell
    command: "adb shell ip addr show wlan0 | grep 'inet '"
    description: 获取IP地址信息
    timeout: 5

  - name: network_screenshot
    type: screenshot
    description: 获取网络状态截图
    timeout: 10

---
# 脚本6: 登录自动化
name: auto_login
description: 自动登录应用程序
version: "1.0"

variables:
  username: "testuser"
  password: "testpass"

steps:
  # 第一步：获取当前屏幕截图
  - name: initial_screenshot
    type: screenshot
    description: "获取当前屏幕状态"
    timeout: 10

  # 第二步：检查是否存在用户名输入框
  - name: check_username_field
    type: check_text
    text: "用户名"
    description: "检查用户名输入框是否存在"
    timeout: 5
    on_failure: check_login_field  # 如果没找到"用户名"，尝试找"登录"

  # 第三步：点击用户名输入框
  - name: tap_username_field
    type: tap_text
    text: "用户名"
    description: "点击用户名输入框"
    timeout: 5

  # 第四步：输入用户名
  - name: input_username
    type: input
    text: "{{username}}"
    description: "输入用户名"
    wait: 1

  # 第五步：查找密码输入框
  - name: check_password_field
    type: check_text
    text: "密码"
    description: "检查密码输入框"
    timeout: 5

  # 第六步：点击密码输入框
  - name: tap_password_field
    type: tap_text
    text: "密码"
    description: "点击密码输入框"
    timeout: 5

  # 第七步：输入密码
  - name: input_password
    type: input
    text: "{{password}}"
    description: "输入密码"
    wait: 1

  # 第八步：查找并点击登录按钮
  - name: tap_login_button
    type: tap_text
    text: "登录"
    description: "点击登录按钮"
    timeout: 5

  # 第九步：等待登录处理
  - name: wait_for_login
    type: wait
    timeout: 3
    description: "等待登录处理"

  # 第十步：检查登录结果
  - name: check_login_result
    type: screenshot
    description: "获取登录后的屏幕状态"
    timeout: 10

  # 备用步骤：如果没找到"用户名"，直接查找"登录"
  - name: check_login_field
    type: check_text
    text: "登录"
    description: "检查是否已在登录页面"
    timeout: 5
    on_failure: end
